{"version":3,"file":"static/js/208.afed5456.chunk.js","mappings":"kNACA,EAA0B,uBAA1B,EAA+D,2B,6BC0B/D,EAtBaA,EAAAA,MAAW,SAACC,GACrB,OACQ,4BACI,yBAAMA,EAAMC,KAAKC,QACjB,SAAC,KAAD,CAASC,GAAM,WAAaH,EAAMC,KAAKG,GAAvC,UACI,gBAAKC,UAAaC,EAAlB,UACI,gBAAKC,IAAkC,MAA3BP,EAAMC,KAAKO,OAAOC,MAAgBT,EAAMC,KAAKO,OAAOC,MAAQC,SAGhF,yBACIV,EAAMC,KAAKU,UACP,mBAAQC,SAAWZ,EAAMa,oBAAoBC,MAAK,SAAAV,GAAE,OAAIA,IAAOJ,EAAMC,KAAKG,MAClEW,QAAS,WAAOf,EAAMgB,SAAShB,EAAMC,KAAKG,KADlD,uBAEA,mBAAQQ,SAAWZ,EAAMa,oBAAoBC,MAAK,SAAAV,GAAE,OAAIA,IAAOJ,EAAMC,KAAKG,MAClEW,QAAS,WAAOf,EAAMiB,OAAOjB,EAAMC,KAAKG,KADhD,uBAKR,yBAAMJ,EAAMC,KAAKiB,WAhBVlB,EAAMC,KAAKG,OCYlC,EAfkBL,EAAAA,MAAW,SAACC,GAC1B,OACI,yBAEQA,EAAMmB,MAAMC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAiBpB,KAAQoB,EACnBR,oBAAsBb,EAAMa,oBAC5BG,SAAYhB,EAAMgB,SAClBC,OAASjB,EAAMiB,QAHVI,EAAEjB,Y,UCiBlD,G,QAlBcL,EAAAA,MAAW,SAACC,GAEtB,OACI,iBAAKK,UAAWC,EAAhB,UAEQN,EAAMsB,WAAa,cACf,0BACA,SAACC,EAAA,EAAD,CAAaC,WAAYxB,EAAMwB,WAClBC,KAAMzB,EAAMyB,KACZC,aAAc1B,EAAM0B,kBAIzC,SAAC,GAAD,kBAAe1B,GAAf,IAAsBa,oBAAuBb,EAAMa,8B,oBCnBlDc,EAAW,SAACC,GACtB,OAAOA,EAAMC,SAASV,OAEZW,EAAyB,SAACF,GAClC,OAAOA,EAAMC,SAAShB,qBCIrBkB,EAAgBhC,EAAAA,MAAW,SAACC,GAC9B,OAAwBgC,EAAAA,EAAAA,UAAS,GAAjC,eAAOP,EAAP,KAAaQ,EAAb,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAAoCH,EAAAA,EAAAA,UAAS,GAA7C,eAAOR,EAAP,KAAmBY,EAAnB,KACA,GAAoCJ,EAAAA,EAAAA,WAAS,GAA7C,eAAOV,EAAP,KAAmBe,EAAnB,MAEAC,EAAAA,EAAAA,YAAU,WACND,GAAc,GACdE,EAAAA,GAAAA,SAAkBd,EAAMS,GAAOM,MAAK,SAAAC,GAClCJ,GAAc,GACZD,GAAcM,EAAAA,EAAAA,GAAcD,EAAKA,KAAKE,WAAYT,IAClDlC,EAAM4C,SAASH,EAAKA,KAAKI,OACzBV,EAAS,SAGd,IASC,OACY,SAAC,GAAD,kBAAWnC,GAAX,IACOiB,OAASjB,EAAMiB,OACfD,SAAWhB,EAAMgB,SACjBU,aAXF,SAACD,GAClBc,EAAAA,GAAAA,aAAsBd,GAAMe,MAAK,SAAAC,GAC7BzC,EAAM4C,SAASH,EAAKA,KAAKI,OACzBZ,EAAQR,OASOA,KAAQA,EACRD,WAAcA,EACdF,WAAcA,EACdT,oBAAuBb,EAAMa,0BAgBxD,GAAeiC,EAAAA,EAAAA,KAASC,EAAAA,EAAAA,KAXF,SAACnB,GACnB,MACI,CACIT,MAAOQ,EAASC,GAChBf,oBAAqBiB,EAAuBF,MAQpD,CAACgB,SAAAA,EAAAA,GAAU3B,OAAAA,EAAAA,GAAQD,SAAAA,EAAAA,IADC+B,CACYhB","sources":["webpack://react-1/./src/components/Users/Users.module.css?b9d0","components/Users/User.jsx","components/Users/UsersList.jsx","components/Users/Users.jsx","redux/users_selector.js","components/Users/UsersContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"userImg\":\"Users_userImg__FsoDQ\",\"userProfile\":\"Users_userProfile__IYQR7\"};","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"./Users.module.css\";\r\nimport userPhoto from \"../../assess/images/images.png\";\r\n\r\nconst User = React.memo((props) => {\r\n    return (\r\n            <div key ={props.user.id}>\r\n                <div>{props.user.name}</div>\r\n                <NavLink to = {'profile/' + props.user.id}>\r\n                    <div className = {s.userImg}>\r\n                        <img src = {props.user.photos.large != null ? props.user.photos.large : userPhoto}/>\r\n                    </div>\r\n                </NavLink>\r\n                <div>{\r\n                    props.user.followed ?\r\n                        <button disabled ={props.followingIsProgress.some(id => id === props.user.id)}\r\n                                onClick={() => {props.unfollow(props.user.id)}}>Unfollow</button> :\r\n                        <button disabled ={props.followingIsProgress.some(id => id === props.user.id)}\r\n                                onClick={() => {props.follow(props.user.id)}}>Follow</button>\r\n\r\n                }</div>\r\n\r\n                <div>{props.user.status}</div>\r\n            </div>)\r\n});\r\n\r\nexport default User;\r\n\r\n\r\n","import React from 'react';\r\nimport User from \"./User\";\r\n\r\n\r\nconst UsersList = React.memo((props) => {\r\n    return (\r\n        <div>\r\n            {\r\n                props.users.map(u => <User key={u.id} user = {u}\r\n                                           followingIsProgress ={props.followingIsProgress}\r\n                                           unfollow = {props.unfollow}\r\n                                           follow ={props.follow}\r\n                />)\r\n            }\r\n\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default UsersList;\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Users.module.css'\r\nimport UsersList from \"./UsersList\";\r\nimport Pagination from \"../../UI/pagination/Pagination\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\n\r\n\r\nconst Users = React.memo((props) => {\r\n\r\n    return (\r\n        <div className={s.userProfile}>\r\n            {\r\n                props.isFetching ? 'Loading...' :\r\n                    <div>\r\n                    <Pagination  totalPages={props.totalPages}\r\n                                 page={props.page}\r\n                                 onPageChange={props.onPageChange}\r\n                    />\r\n                </div>\r\n            }\r\n            <UsersList {...props} followingIsProgress = {props.followingIsProgress} />\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Users;\r\n\r\n\r\n","\r\nexport const getUsers = (state) => {\r\n   return state.userPage.users\r\n}\r\nexport const getFollowingIsProgress = (state) => {\r\n     return state.userPage.followingIsProgress\r\n    }","import React, {useEffect, useState} from 'react';\r\nimport {follow, setUsers, unfollow} from \"../../redux/user_reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport Users from \"./Users\";\r\nimport {usersAPI} from \"../../api/api\";\r\nimport {getPagesCount} from \"../../utils/pages\";\r\nimport {getFollowingIsProgress, getUsers} from \"../../redux/users_selector\";\r\n\r\nconst UserContainer = React.memo((props) => {\r\n    const [page, setPage] = useState(1)\r\n    const [limit, setLimit] = useState(10)\r\n    const [totalPages, setTotalPages] = useState(0)\r\n    const [isFetching, setIsFetching] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setIsFetching(true)\r\n        usersAPI.getUsers(page, limit).then(data => {\r\n          setIsFetching(false)\r\n            setTotalPages(getPagesCount(data.data.totalCount, limit))\r\n            props.setUsers(data.data.items)\r\n            setLimit(10)\r\n        })\r\n\r\n    }, [])\r\n\r\n    const onPageChange = (page) => {\r\n        usersAPI.getPageUsers(page).then(data => {\r\n            props.setUsers(data.data.items)\r\n            setPage(page)\r\n        })\r\n\r\n    }\r\n        return (\r\n                    <Users {...props}\r\n                           follow ={props.follow}\r\n                           unfollow ={props.unfollow}\r\n                           onPageChange = {onPageChange}\r\n                           page = {page}\r\n                           totalPages = {totalPages}\r\n                           isFetching = {isFetching}\r\n                           followingIsProgress = {props.followingIsProgress}\r\n                    />\r\n        )\r\n    })\r\n\r\nlet mapStateToProps = (state) => {\r\n    return (\r\n        {\r\n            users: getUsers(state),\r\n            followingIsProgress: getFollowingIsProgress(state)\r\n        }\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default compose (connect (mapStateToProps,\r\n    {setUsers, follow, unfollow  })(UserContainer))\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["React","props","user","name","to","id","className","s","src","photos","large","userPhoto","followed","disabled","followingIsProgress","some","onClick","unfollow","follow","status","users","map","u","isFetching","Pagination","totalPages","page","onPageChange","getUsers","state","userPage","getFollowingIsProgress","UserContainer","useState","setPage","limit","setLimit","setTotalPages","setIsFetching","useEffect","usersAPI","then","data","getPagesCount","totalCount","setUsers","items","compose","connect"],"sourceRoot":""}