{"version":3,"file":"static/js/208.2f959d67.chunk.js","mappings":"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","sources":["UI/button/MyButton.js","UI/pagination/Pagination.jsx","webpack://react-1/./src/components/Users/Users.module.css?b9d0","components/Users/User.jsx","components/Users/UsersList.jsx","components/Users/Users.jsx","redux/users_selector.js","components/Users/UsersContainer.jsx","utils/pages.jsx","webpack://react-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b"],"sourcesContent":["import React from 'react';\r\nimport s from '../../components/Profile/MyPosts/MyPosts.module.css'\r\n\r\nconst MyButton = ({children, ...props}) => {\r\n\r\n    return (\r\n        <button {...props} className={s.myBtn}>\r\n            {children}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default MyButton;\r\n","import React, {useState} from 'react';\r\nimport '../../components/Profile/MyPosts/postList/PostList.css'\r\nimport MyButton from \"../button/MyButton\";\r\n\r\nconst Pagination = ({totalPages, page, onPageChange, portionSize =8, }) => {\r\n\r\n        let pages =[]\r\n        for (let i=0; i < totalPages; i++){\r\n            pages.push(i+1)\r\n        }\r\n\r\n    let portionCount = Math.ceil(totalPages/portionSize)\r\n    let [portionNumber, setPortionNumber] = useState (1)\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    return (\r\n        <div className ='pageWrapper'>\r\n            {\r\n                portionNumber > 1 &&\r\n                <button style ={{paddingLeft: '1px', textAlign: 'center'}} onClick={ () => {setPortionNumber (portionNumber -1)} }> prev </button>\r\n            }\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber )\r\n                .map(p =>\r\n                <div key = {p} onClick={\r\n                    (e) => onPageChange(p)}\r\n                     className ={ page === p ? 'page pageCurrent' : 'page' } >{p}</div>\r\n            )}\r\n            {\r\n                portionCount > portionNumber &&\r\n                <MyButton onClick ={ () => {setPortionNumber(portionNumber  + 1) }} > next </MyButton>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"userImg\":\"Users_userImg__FsoDQ\",\"userProfile\":\"Users_userProfile__IYQR7\"};","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"./Users.module.css\";\r\nimport userPhoto from \"../../assess/images/images.png\";\r\n\r\nconst User = React.memo((props) => {\r\n    return (\r\n            <div key ={props.user.id}>\r\n                <div>{props.user.name}</div>\r\n                <NavLink to = {'profile/' + props.user.id}>\r\n                    <div className = {s.userImg}>\r\n                        <img src = {props.user.photos.large != null ? props.user.photos.large : userPhoto}/>\r\n                    </div>\r\n                </NavLink>\r\n                <div>{\r\n                    props.user.followed ?\r\n                        <button disabled ={props.followingIsProgress.some(id => id === props.user.id)}\r\n                                onClick={() => {props.unfollow(props.user.id)}}>Unfollow</button> :\r\n                        <button disabled ={props.followingIsProgress.some(id => id === props.user.id)}\r\n                                onClick={() => {props.follow(props.user.id)}}>Follow</button>\r\n\r\n                }</div>\r\n\r\n                <div>{props.user.status}</div>\r\n            </div>)\r\n});\r\n\r\nexport default User;\r\n\r\n\r\n","import React from 'react';\r\nimport User from \"./User\";\r\n\r\n\r\nconst UsersList = React.memo((props) => {\r\n    return (\r\n        <div>\r\n            {\r\n                props.users.map(u => <User key={u.id} user = {u}\r\n                                           followingIsProgress ={props.followingIsProgress}\r\n                                           unfollow = {props.unfollow}\r\n                                           follow ={props.follow}\r\n                />)\r\n            }\r\n\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default UsersList;\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Users.module.css'\r\nimport UsersList from \"./UsersList\";\r\nimport Pagination from \"../../UI/pagination/Pagination\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\n\r\n\r\nconst Users = React.memo((props) => {\r\n\r\n    return (\r\n        <div className={s.userProfile}>\r\n            {\r\n                props.isFetching ? 'Loading...' :\r\n                    <div>\r\n                    <Pagination  totalPages={props.totalPages}\r\n                                 page={props.page}\r\n                                 onPageChange={props.onPageChange}\r\n                    />\r\n                </div>\r\n            }\r\n            <UsersList {...props} followingIsProgress = {props.followingIsProgress} />\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Users;\r\n\r\n\r\n","\r\nexport const getUsers = (state) => {\r\n   return state.userPage.users\r\n}\r\nexport const getFollowingIsProgress = (state) => {\r\n     return state.userPage.followingIsProgress\r\n    }","import React, {useEffect, useState} from 'react';\r\nimport {follow, setUsers, unfollow} from \"../../redux/user_reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport Users from \"./Users\";\r\nimport {usersAPI} from \"../../api/api\";\r\nimport {getPagesCount} from \"../../utils/pages\";\r\nimport {getFollowingIsProgress, getUsers} from \"../../redux/users_selector\";\r\n\r\nconst UserContainer = React.memo((props) => {\r\n    const [page, setPage] = useState(1)\r\n    const [limit, setLimit] = useState(10)\r\n    const [totalPages, setTotalPages] = useState(0)\r\n    const [isFetching, setIsFetching] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setIsFetching(true)\r\n        usersAPI.getUsers(page, limit).then(data => {\r\n          setIsFetching(false)\r\n            setTotalPages(getPagesCount(data.data.totalCount, limit))\r\n            props.setUsers(data.data.items)\r\n            setLimit(10)\r\n        })\r\n\r\n    }, [])\r\n\r\n    const onPageChange = (page) => {\r\n        usersAPI.getPageUsers(page).then(data => {\r\n            props.setUsers(data.data.items)\r\n            setPage(page)\r\n        })\r\n\r\n    }\r\n        return (\r\n                    <Users {...props}\r\n                           follow ={props.follow}\r\n                           unfollow ={props.unfollow}\r\n                           onPageChange = {onPageChange}\r\n                           page = {page}\r\n                           totalPages = {totalPages}\r\n                           isFetching = {isFetching}\r\n                           followingIsProgress = {props.followingIsProgress}\r\n                    />\r\n        )\r\n    })\r\n\r\nlet mapStateToProps = (state) => {\r\n    return (\r\n        {\r\n            users: getUsers(state),\r\n            followingIsProgress: getFollowingIsProgress(state)\r\n        }\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default compose (connect (mapStateToProps,\r\n    {setUsers, follow, unfollow  })(UserContainer))\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","export const getPagesCount = (totalCount, limit) => {\r\n    return  Math.ceil(totalCount/limit)\r\n}\r\n\r\n// export const getPagesArray = (totalPages) => {\r\n//     let pages =[]\r\n//     for (let i=0; i < totalPages; i++){\r\n//         pages.push(i+1)\r\n//     }\r\n//     return pages\r\n// }\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"myBtn\":\"MyPosts_myBtn__2HbxY\",\"myInput\":\"MyPosts_myInput__7H3DA\"};"],"names":["children","props","className","s","totalPages","page","onPageChange","portionSize","pages","i","push","portionCount","Math","ceil","useState","portionNumber","setPortionNumber","rightPortionPageNumber","leftPortionPageNumber","style","paddingLeft","textAlign","onClick","filter","p","map","e","React","user","name","to","id","src","photos","large","userPhoto","followed","disabled","followingIsProgress","some","unfollow","follow","status","users","u","isFetching","Pagination","getUsers","state","userPage","getFollowingIsProgress","UserContainer","setPage","limit","setLimit","setTotalPages","setIsFetching","useEffect","usersAPI","then","data","getPagesCount","totalCount","setUsers","items","compose","connect"],"sourceRoot":""}